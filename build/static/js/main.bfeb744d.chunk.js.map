{"version":3,"sources":["config.js","components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["require","config","firebaseConfig","apiKey","process","API_KEY","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","Footer","year","Date","getFullYear","Note","props","className","title","content","IconButton","onClick","confirmAlert","message","buttons","label","deleteNote","id","CreateArea","note","setNote","useState","handleChange","event","name","value","target","prevNote","isFocus","setIsFocus","onSubmit","noteId","uniqid","onAdd","preventDefault","onChange","placeholder","onFocus","rows","maxlength","Zoom","in","Fab","type","App","initializeApp","db","getFirestore","notesRef","collection","notesData","useCollectionData","handleDelete","async","docRef","doc","deleteDoc","newNote","length","setDoc","e","console","error","map","noteItem","key","ReactDOM","render","document","getElementById"],"mappings":"kQAAAA,EAAQ,IAAUC,SAYHC,MAVQ,CACnBC,OAAQC,gEAAYC,QACpBC,WAAY,2BACZC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBCCJC,MARf,WACE,OACE,gCACE,iDCOSC,MAVf,WACE,MAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,qDACA,+CAAgBF,K,iCC2BPG,MA7Bf,SAAcC,GAkBZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,kBAACC,EAAA,EAAD,CAAYC,QApBhB,WACEC,uBAAa,CACXJ,MAAO,UACPK,QAAS,+BACTC,QAAS,CACP,CACEC,MAAO,SACPJ,QAAS,IAAML,EAAMU,WAAWV,EAAMW,KAExC,CACEF,MAAO,YAWT,kBAAC,IAAD,S,kDC4COG,MAlEf,SAAoBZ,GAElB,MAAOa,EAAMC,GAAWC,mBAAS,CAC/Bb,MAAO,GACPC,QAAS,GACTQ,GAAI,KAIN,SAASK,EAAaC,GACpB,MAAM,KAAEC,EAAF,MAAQC,GAAUF,EAAMG,OAE9BN,EAAQO,IACC,IACFA,EACH,CAACH,GAAOC,KAgBd,MAAOG,EAASC,GAAcR,oBAAS,GAKvC,OACE,6BACE,0BAAMd,UAAU,cAAcuB,SAlBlC,SAAoBP,GAClB,MAAMQ,EAASC,MACf1B,EAAM2B,MAAM,IAAId,EAAMF,GAAIc,IAC1BX,EAAQ,CACNZ,MAAO,GACPC,QAAS,GACTQ,GAAI,KAENM,EAAMW,mBAWAN,GACE,2BACEJ,KAAK,QACLW,SAAUb,EACVG,MAAON,EAAKX,MACZ4B,YAAY,UAGlB,8BACEZ,KAAK,UACLa,QAjBR,WACER,GAAW,IAiBLM,SAAUb,EACVG,MAAON,EAAKV,QACZ2B,YAAY,mBACZE,KAAOV,EAAU,EAAI,EACrBW,UAAU,QAEZ,kBAACC,EAAA,EAAD,CAAMC,GAAIb,GACR,kBAACc,EAAA,EAAD,CAAKC,KAAK,UACR,kBAAC,IAAD,WCVGC,MA1Cf,WAEEC,YAAcvD,GACd,MAAMwD,EAAKC,cACLC,EAAWC,YAAWH,EAAI,UAEzBI,GAAaC,YAAkBH,GAEhCI,EAAeC,UACjB,MAAMC,EAASC,YAAIT,EAAI,QAAS7B,SAC1BuC,YAAUF,IAYpB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYrB,MAZhB,SAAiBwB,GACf,GAA6B,IAAzBA,EAAQjD,MAAMkD,QAA2C,IAA3BD,EAAQhD,QAAQiD,OAClD,IACEC,YAAOJ,YAAIT,EAAI,QAASW,EAAQxC,IAAKwC,GACrC,MAAOG,GACPC,QAAQC,MAAM,0BAA2BF,OAQzC,yBAAKrD,UAAU,kBACX2C,GAAaA,EAAUa,IAAIC,GAC3B,kBAAC,EAAD,CACE/C,GAAI+C,EAAS/C,GACbgD,IAAKD,EAAS/C,GACdT,MAAOwD,EAASxD,MAChBC,QAASuD,EAASvD,QAClBO,WAAYoC,MAIlB,kBAAC,EAAD,QC7CNc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bfeb744d.chunk.js","sourcesContent":["require(\"dotenv\").config();\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.API_KEY,\r\n    authDomain: \"not-keep.firebaseapp.com\",\r\n    projectId: \"not-keep\",\r\n    storageBucket: \"not-keep.appspot.com\",\r\n    messagingSenderId: \"643263663525\",\r\n    appId: \"1:643263663525:web:fa6eb39b7421eecb64ec4c\",\r\n    measurementId: \"G-8EM6RZG0L4\"\r\n};\r\n\r\nexport default firebaseConfig;","import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>not Google Keep</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Built by Mel Chanatan </p>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton } from \"@material-ui/core\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nfunction Note(props) {\n\n  function submit() {\n    confirmAlert({\n      title: 'Delete?',\n      message: \"This action can't be undone.\",\n      buttons: [\n        {\n          label: 'Delete',\n          onClick: () => props.deleteNote(props.id)\n        },\n        {\n          label: 'Nah',\n        }\n      ]\n    });\n  };\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <IconButton onClick={submit}>\n        <DeleteIcon />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport uniqid from 'uniqid';\n\nfunction CreateArea(props) {\n\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n    id: \"\"\n  });\n\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    \n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value,\n      };\n    });\n  }\n\n  function submitNote(event) {\n    const noteId = uniqid();\n    props.onAdd({...note, id: noteId});\n    setNote({\n      title: \"\",\n      content: \"\",\n      id: \"\"\n    });\n    event.preventDefault();\n  }\n\n  const [isFocus, setIsFocus] = useState(false);\n  function handleFocus() {\n    setIsFocus(true)\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\" onSubmit={submitNote}>\n        { isFocus && (\n            <input\n              name=\"title\"\n              onChange={handleChange}\n              value={note.title}\n              placeholder=\"Title\"\n            />\n          )}\n        <textarea\n          name=\"content\"\n          onFocus={handleFocus}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Say something...\"\n          rows= {isFocus ? 3 : 1}\n          maxlength=\"500\"\n        />\n        <Zoom in={isFocus}>\n          <Fab type=\"submit\">\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import { initializeApp } from \"firebase/app\"\nimport { getFirestore, collection, setDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\"\nimport firebaseConfig from \"../config\";\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\n\nfunction App() {\n\n  initializeApp(firebaseConfig);\n  const db = getFirestore();\n  const notesRef = collection(db, \"users\");\n\n  const [notesData] = useCollectionData(notesRef)\n\n  const handleDelete = async (id) => {\n      const docRef = doc(db, \"users\", id);\n      await deleteDoc(docRef);\n  };\n\n  function addNote(newNote) {\n    if (newNote.title.length === 0 && newNote.content.length === 0) return\n    try {\n      setDoc(doc(db, \"users\", newNote.id), newNote ); // add data to database \n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      <div className=\"note-container\">\n        { notesData && notesData.map(noteItem => \n          <Note \n            id={noteItem.id} \n            key={noteItem.id} \n            title={noteItem.title} \n            content={noteItem.content} \n            deleteNote={handleDelete}\n          />\n        )}  \n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}